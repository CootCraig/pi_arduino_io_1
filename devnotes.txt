================== useful stuff
Wireless on Pi
ssh 192.168.88.218

https://192.168.88.218:4430/

cd ~/dev/pi_arduino_io_1/
cp -R sketchbook ~/

--- socat connects /dev/ttyUSB0 to TCP port 54321
socat tcp-l:54321,reuseaddr,fork file:/dev/ttyUSB0,b9600,nonblock,raw,echo=0,waitlock=/var/run/ttyUSB0.lock

socat tcp-listen:54321,reuseaddr,fork file:/dev/Diavolino,raw,echo=0,b9600,waitlock=/var/run/Diavolino.lock

--- socat connect terminal to TCP port 54321
socat - tcp:localhost:54321

================== tls cert, tls key
https://github.com/celluloid/reel/blob/master/lib/reel/server/https.rb

options are
# @option options [String] :cert the server's TLS certificate
# @option options [String] :key  the server's TLS key

==================
http://wiki.centos.org/HowTos/Https

. Generate a self-signed certificate

Using OpenSSL we will generate a self-signed certificate. If you are
using this on a production server you are probably likely to want a key
from a Trusted Certificate Authority, but if you are just using this on
a personal site or for testing purposes a self-signed certificate is
fine. To create the key you will need to be root so you can either su
to root or use sudo in front of the commands


# Generate private key 
openssl genrsa -out ca.key 2048 

# Generate CSR 
openssl req -new -key ca.key -out ca.csr

# Generate Self Signed Key
openssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca.crt

# Copy the files to the correct locations
cp ca.crt /etc/pki/tls/certs
cp ca.key /etc/pki/tls/private/ca.key
cp ca.csr /etc/pki/tls/private/ca.csr

WARNING: Make sure that you copy the files and do not move them if you use
SELinux. Apache will complain about missing certificate files otherwise,
as it cannot read them because the certificate files do not have the
right SELinux context.

==================
https://github.com/dcompute/Zepto-Cookie

==================
http://www.peej.co.uk/articles/http-auth-with-html-forms.html
http://theninjabag.net/blog//blog/2013/06/25/dtob-dot-py-digest-to-basic-authentication-a-simple-example-of-a-authentication-downgrade-attack/
http://swaggadocio.com/post/48223179207/why-the-hell-does-your-api-still-use-http-basic-auth
==================
http://user:password@example.com 
http://user:passwd@www.server.com/index.html
https://github.com/sparklemotion/http-cookie
================== socat to communicat from pi to arduino

A New simple Command Line Interface (CLI) to Arduino
http://digital-salvage.net/?p=180#more-180

Firmata a generic protocol for communicating with microcontrollers like
the Arduino from software on a host computer.
http://playground.arduino.cc/Interfacing/Firmata#.Ux0Lzh993Ac

This is the home of arsh, the arduino shell. It aims to provide a basic
interactive environment to explore an arduino (or similar) board.
http://biot.com/arsh/

Breakfast – Arduino shell
http://makezine.com/2008/10/30/breakfast-arduino-shell/

Bitlash is an open source interpreted language shell and embedded
programming environment for the popular and useful Arduino.
http://bitlash.net/

Reading from Serial on the Arduino
http://hacking.majenko.co.uk/reading-serial-on-the-arduino
----------
http://www.dest-unreach.org/socat/doc/socat-ttyovertcp.txt

EXAMPLE FOR REMOTE TTY (TTY OVER TCP) USING SOCAT

You have a host with some serial device like a modem or a bluetooth interface
(modem server)
You want to make use of this device on a different host. (client)

1) on the modem server start a process that accepts network connections and
links them with the serial device /dev/tty0:

$ socat tcp-l:54321,reuseaddr,fork file:/dev/tty0,nonblock,waitlock=/var/run/tty0.lock

2) on the client start a process that creates a pseudo tty and links it with a
tcp connection to the modem server:

$ socat pty,link=$HOME/dev/vmodem0,waitslave tcp:modem-server:54321


----------
pika# ls -l /dev/ttyUSB0
crw-rw---T 1 root dialout 188, 0 Mar  9 14:07 /dev/ttyUSB0

--- socat connects /dev/ttyUSB0 to TCP port 54321
socat tcp-l:54321,reuseaddr,fork file:/dev/ttyUSB0,b9600,nonblock,waitlock=/var/run/ttyUSB0.lock

--- socat connect terminal to TCP port 54321
socat - tcp:localhost:54321

So let's try and have supverisor run this at boot time.
socat tcp-l:54321,reuseaddr,fork file:/dev/ttyUSB0,b9600,nonblock,waitlock=/var/run/ttyUSB0.lock


---------- To try
It was demonstrated that
socat - tcp:localhost:54321
displayed this output from the Arduino
  Serial.begin(9600);
  Serial.print("Button checker with ");

So let's try and have supverisor run this at boot time.
socat tcp-l:54321,reuseaddr,fork file:/dev/ttyUSB0,b9600,nonblock,waitlock=/var/run/ttyUSB0.lock


================== Arduino periodic timer
http://playground.arduino.cc/Code/SimpleTimer#.UxzPBB993Ac
==================
http://www.nongnu.org/avr-libc/user-manual/modules.html
==================
================== Arduino code notes
==================

==================
http://www.iheartrobotics.com/2010/02/debugginng-serial-interfaces.html
Debugging Serial Interfaces

As mentioned, socat looks pretty useful program for debugging serial problems. So here is how to get it working.

------------------
http://sudanlandge.blogspot.com/2013/04/socat-examples.html
socat for tcp port to serial port :

    ./socat TCP4-LISTEN:54322 /dev/ttyUSB1,raw,echo 0,crnl
    the above command establishes a two way connection between serial port /dev/ttyUSB0 and the tcp port 54322.

------------------
http://stackoverflow.com/questions/20043776/bi-directional-socket-to-tcp-communication
As some commenters already mentioned, you can't make a TCP connection with two listeners. For a TCP connection you always need a server (listener) and a client.

As your software is already a server (listening on port 7758) socat should be run in client mode (connecting to your server).

This can be done with the option TCP:<host>:<port>, for example like this (adapted your example, not tested!):

socat -d -d -d -d -x TCP:localhost:7758 FILE:/dev/ttyUSB0,b9600,raw

------------------
http://www.raspberrypi.org/forum/viewtopic.php?f=63&t=66776&p=489032&hilit=socat#p489032
by CopterRichie » Fri Jan 17, 2014 12:29 pm
I added the following to /etc/inittab for my application. Works great so far. socat will listen to port 8899 and when a connection comes in, it will open the serial port. Once the connection is done, a respawn is done making it ready for a new connection.

CODE: SELECT ALL
#Spawn a getty on Raspberry Pi serial line
#T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100
T0:23:respawn:/usr/bin/socat TCP-LISTEN:8899,reuseaddr /dev/ttyAMA0,raw,echo=0,crnl,b115200

------------------

================== socat attempts
# socat 
tcp-l:54321,reuseaddr,fork

socat TCP-LISTEN:54321,reuseaddr /dev/ttyUSB0,raw,echo=0,crnl,b9600
# read working. write problems?

==================
billchurch

Moteino USB - How to make the /dev path more deterministic in Linux
http://lowpowerlab.com/forum/index.php/topic,381.0.html

udevadm info -a -p `udevadm info -q path -n /dev/ttyUSB0`

(I'm concatenating two commands here, "udevadm info -q path -n
/dev/ttyUSB0" gives me the long path that "udevadm info -a -p" needs.)

That data will allow me to make a file (as root) in /etc/udev/rules.d
that will contain the criteria I need to make a symbolic link in /dev that
will allow me to call out to my specific Moteino reliably every time. The
serial number is key here, in theory if I had multiple Moteino's I could
make rules for them all, calling out each one by serial number.

…
looking at parent device '/devices/platform/bcm2708_usb/usb1/1-1/1-1.3/1-1.3.6':
  KERNELS=="1-1.3.6"
  SUBSYSTEMS=="usb"
  DRIVERS=="usb"
…
  ATTRS{idVendor}=="0403"
...
  ATTRS{serial}=="ABC123"
...
  ATTRS{idProduct}=="6015"
  ATTRS{bDeviceClass}=="00"
  ATTRS{product}=="FT231X USB UART"
...

I created /etc/udev/rules.d/45-moteino.rules with the following for my
specific case:

Code:
UBSYSTEM=="tty", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6015", ATTRS{serial}=="ABC123", SYMLINK+="MoteinoGW"

Modified my moteino.js to now reference /dev/MoteinoGW instead of
/dev/ttyUSB0 and then did a reboot to make sure everything was working
as it should.

---------------- See pi_arduino_io_1/notes/udevadm_20140311_1300.log
udevadm info -a -p `udevadm info -q path -n /dev/ttyUSB0`
Diavolino on FTDI

 ...
  looking at parent device '/devices/platform/bcm2708_usb/usb1/1-1/1-1.3/1-1.3:1.0/ttyUSB0':
    KERNELS=="ttyUSB0"
    SUBSYSTEMS=="usb-serial"
    DRIVERS=="ftdi_sio"
    ATTRS{port_number}=="0"
    ATTRS{latency_timer}=="1"
 ...
  looking at parent device '/devices/platform/bcm2708_usb/usb1/1-1/1-1.3':
    KERNELS=="1-1.3"
    SUBSYSTEMS=="usb"
    DRIVERS=="usb"
 ...
    ATTRS{idVendor}=="0403"

    ATTRS{serial}=="AH01PAVO"

    ATTRS{idProduct}=="6001"
    ATTRS{bDeviceClass}=="00"
    ATTRS{product}=="FT232R USB UART"

-----------------
http://reactivated.net/writing_udev_rules.html
Writing udev rules by Daniel Drake (dsd)

http://hackaday.com/2009/09/18/how-to-write-udev-rules/
How to write udev rules

http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/
Persistent names for usb-serial devices
On 26.11.2009 by Michal Ludvig

Wouldn’t it be nice to have persistent, descriptive device name for
each of these toys? Like /dev/arduino, /dev/buspirate and /dev/arm?

UDEV rules

Now with the list of serial numbers in hand let’s create a UDEV ruleset
that’ll make a nice symbolic link for each of these devices. UDEV rules
are usually scattered into many files in /etc/udev/rules.d. Create a
new file called 99-usb-serial.rules and put the following lines in there:

SUBSYSTEM=="tty", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ATTRS{serial}=="A6008isP", SYMLINK+="arduino"
SUBSYSTEM=="tty", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ATTRS{serial}=="A7004IXj", SYMLINK+="buspirate"
SUBSYSTEM=="tty", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ATTRS{serial}=="FTDIF46B", SYMLINK+="ttyUSB.ARM"

By now it should be obvious what these lines mean. Perhaps just a note
for the last entry on each line — SYMLINK+="arduino" means that UDEV
should create a symlink /dev/arduino pointing to the actual /dev/ttyUSB*
device. In other words the device names will continue to be assigned
ad-hoc but the symbolic links will always point to the right device
node. Let’s see. Unplug Arduino and plug it back again…

~# ls -l /dev/arduino
lrwxrwxrwx 1 root root 7 Nov 25 22:12 /dev/arduino -> ttyUSB1

~# ls -l /dev/ttyUSB1
crw-rw---- 1 root uucp 188, 0 Nov 25 22:12 /dev/ttyUSB1

http://mattrw.wordpress.com/2013/11/
The problem comes when you have another Arduino board you want to connect
since they will share the same vendor and product IDs. One of them will
be assigned the ttyUSBGAS symlink but you won’t know which one.

The way to solve it is to look at the other attributes presented by the
Arduinos when they connect. The vendor ID and product ID are the same
for every board but there is a serial number attribute which appears
to be unique to the board. (It probably isn’t completely unique so if
you tried another few hundred Arduino’s you’d probably find one with
the same serial number.) However, the 2 I’ve got have different serial
numbers and this is enough to distinguish between them. The serial number
is added into the Arduino rules to create two different symlinks:

http://www.downtowndougbrown.com/2014/03/linux-udev-rules/

================== My udev attempt
/etc/udev/rules.d/50-usb-serial.rules
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ATTRS{serial}=="AH01PAVO", SYMLINK+="Diavolino"

--- After reboot

pika# ls -l /dev/Diavolino 
lrwxrwxrwx 1 root root 7 Dec 31  1969 /dev/Diavolino -> ttyUSB0
pika# ls -l /dev/ttyUSB0
crw-rw---T 1 root dialout 188, 0 Dec 31  1969 /dev/ttyUSB0

==================
E, [2014-03-12T08:36:48.510000 #10754300] ERROR -- : thread crashed
Java::JavaNet::ConnectException: Connection refused
  sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
  sun.nio.ch.SocketChannelImpl.finishConnect(sun/nio/ch/SocketChannelImpl.java:712)
  java.lang.reflect.Method.invoke(java/lang/reflect/Method.java:483)
  RUBY.initialize(/opt/jruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-io-39e7dc8e7a34/lib/celluloid/io/tcp_socket.rb:92)
  RUBY.initialize(/opt/coot.net/pi_arduino_io_1/arduino_io.rb:19)

==================
craig@pika:/opt/coot.net/pi_arduino_io_1$ jruby app.rb
/opt/jruby/jruby-1.7.11/lib/ruby/gems/shared/gems/bundler-1.5.3/lib/bundler.rb:297 warning: executable? does not in this environment and will return a dummy value
app_config_file [/opt/coot.net/pi_arduino_io_1/app.yml]
W, [2014-03-12T08:47:35.105000 #10754300]  WARN -- : Error accepting SSLSocket: OpenSSL::SSL::SSLError: Unrecognized SSL message, plaintext connection?
W, [2014-03-12T08:47:41.210000 #10754300]  WARN -- : Error accepting SSLSocket: OpenSSL::SSL::SSLError: Socket closed
^CD, [2014-03-12T08:47:42.299000 #10754300] DEBUG -- : Terminating 10 actors...
==================
E, [2014-03-12T09:48:35.369000 #10754300] ERROR -- : Actor crashed!
NoMethodError: undefined method `async' for nil:NilClass
  /opt/coot.net/pi_arduino_io_1/arduino_io.rb:35:in `handle_read'
  org/jruby/RubyKernel.java:1965:in `public_send'

==================
E, [2014-03-12T10:42:59.971000 #10754300] ERROR -- : Actor crashed!
NameError: undefined local variable or method `connection' for PiArduinoIo1::ArduinoIo:Class
  /opt/coot.net/pi_arduino_io_1/arduino_io.rb:73:in `send_request'
  /opt/coot.net/pi_arduino_io_1/http_request_router.rb:20:in `request_page'
  /opt/coot.net/pi_arduino_io_1/http_server.rb:59:in `start'
  /opt/jruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/reel-5afcb7f9a2dd/lib/reel/connection.rb:73:in `each_request'
  /opt/coot.net/pi_arduino_io_1/http_server.rb:33:in `start'

==================
FFI not available: on Raspberry Pi ARM linux JRuby

require 'spoon' fails on Raspberry Pi ARM linux JRuby

---- system notes
$ uname -a
Linux pika 3.10-3-rpi #1 Debian 3.10.11-1+rpi4 (2014-01-24) armv6l GNU/Linux

$ jruby -v
jruby 1.7.11 (1.9.3p392) 2014-02-24 86339bb on Java HotSpot(TM) Client VM 1.8.0-b129 +indy [linux-arm]

-------------------------------- the Exception trace

LoadError: Could not load FFI Provider: (NotImplementedError) FFI not available: null
 See http://jira.codehaus.org/browse/JRUBY-4583
  require at org/jruby/RubyKernel.java:1085
   (root) at /opt/jruby/jruby-1.7.11/lib/ruby/shared/ffi/ffi.rb:69
  require at org/jruby/RubyKernel.java:1085
   (root) at /opt/jruby/jruby-1.7.11/lib/ruby/shared/ffi.rb:1
  require at org/jruby/RubyKernel.java:1085
   (root) at /opt/jruby/jruby-1.7.11/lib/ruby/shared/ffi.rb:1
  require at org/jruby/RubyKernel.java:1085
   (root) at /opt/jruby/jruby-1.7.11/lib/ruby/gems/shared/gems/spoon-0.0.4/lib/spoon/unix.rb:1
  require at org/jruby/RubyKernel.java:1085
   (root) at spoon_socat.rb:8

--- From Gemfile.lock
GEM                                                                                                                                                                                                                                          
  remote: http://rubygems.org/                                                                                                                                                                                                               
  specs:                                                                                                                                                                                                                                     
...
    ffi (1.9.3-java)                                                                                                                                                                                                                         
...
    spoon (0.0.4)                                                                                                                                                                                                                            
      ffi    
...

--- From the script
require 'rubygems'                                                                                                                                                                                                                           
require 'bundler/setup'                                                                                                                                                                                                                      
                                                                                                                                                                                                                                             
require 'celluloid/autostart'                                                                                                                                                                                                                
require 'celluloid/io'                                                                                                                                                                                                                       
                                                                                                                                                                                                                                             
require 'spoon'  <<<<<<<<<<<<<<<<<<<<<< line 8 - spoon_socat.rb:8
                                                                                                                                                                                                                                             
class SocatSpawnAndWait                                                                                                                                                                                                                      
  include 'Celluloid'                                                                                                                                                                                                                        
  include 'Celluloid::Notifications'                                                                                                                                                                                                         
                                                                                                                                                                                                                                             
  DEFAULT_SPAWN_ARGV %w(/usr/bin/socat tcp-listen:54321,reuseaddr,fork file:/dev/Diavolino,raw,echo=0,b9600,waitlock=/var/run/Diavolino.lock')                                                                                               
                                                                                                                                                                                                                                             
  def initialize(aspawn_argv=DEFAULT_SPAWN_ARGV)                                                                                                                                                                                             
    @spawn_argv = aspawn_argv                                                                                                                                                                                                                
  end                                                                                                                                                                                                                                        
  def run                                                                                                                                                                                                                                    
    file_actions = Spoon::FileActions.new                                                                                                                                                                                                    
    spawn_attr = Spoon::SpawnAttributes.new                                                                                                                                                                                                  
      spawn_pid = Spoon.posix_spawn(SPAWN_PATH, file_actions, spawn_attr, @spawn_argv)                                                                                                                                                       
    wait_pid,wait_status = Process.waitpid(spawn_pid)                                                                                                                                                                                        
    [wait_pid,wait_status]                                                                                                                                                                                                                   
  end                                                                                                                                                                                                                                        
end     

span_and_wait = SocatspawnAndWait.new                                                                                                                                                                                                        
span_and_wait.run       



craig@pika:/opt/coot.net/pi_arduino_io_1/ruby_tests$ jruby spoon_socat.rb 
/opt/jruby/jruby-1.7.11/lib/ruby/gems/shared/gems/bundler-1.5.3/lib/bundler.rb:297 warning: executable? does not in this environment and will return a dummy value
LoadError: Could not load FFI Provider: (NotImplementedError) FFI not available: null
 See http://jira.codehaus.org/browse/JRUBY-4583
  require at org/jruby/RubyKernel.java:1085
   (root) at /opt/jruby/jruby-1.7.11/lib/ruby/shared/ffi/ffi.rb:69
  require at org/jruby/RubyKernel.java:1085
   (root) at /opt/jruby/jruby-1.7.11/lib/ruby/shared/ffi.rb:1
  require at org/jruby/RubyKernel.java:1085
   (root) at /opt/jruby/jruby-1.7.11/lib/ruby/shared/ffi.rb:1
  require at org/jruby/RubyKernel.java:1085
   (root) at /opt/jruby/jruby-1.7.11/lib/ruby/gems/shared/gems/spoon-0.0.4/lib/spoon/unix.rb:1
  require at org/jruby/RubyKernel.java:1085
   (root) at spoon_socat.rb:8

==================
https://logstash.jira.com/browse/LOGSTASH-1227

When I started the logstash on linux 32-bit it outputs error logs like this:
Exception in thread "main" org.jruby.exceptions.RaiseException: (LoadError) Could not load FFI Provider: (NotImplementedError) FFI not available: null
See http://jira.codehaus.org/browse/JRUBY-4583
at org.jruby.RubyKernel.require(org/jruby/RubyKernel.java:1027)

Richard Pijnenburg added a comment - 13/Sep/13 6:24 AM
Hi,
This is caused when the /tmp is mounted with certain mount options.
If you provide '-Djava.io.tmpdir=' to an other directory this should solve it.

==================
https://github.com/jruby/jruby/issues/1302

JRuby fails to load FFI support with obscure error when /tmp is not writable #1302

$ sudo chmod 1775 /tmp
$ java -Djruby.native.verbose=true -jar jruby-complete.jar -rffi -e :ok
Failed to load native POSIX impl; falling back on Java impl. Stacktrace follows.
java.lang.UnsatisfiedLinkError: could not load FFI provider jnr.ffi.provider.jffi.Provider
        at jnr.ffi.provider.InvalidProvider$1.loadLibrary(InvalidProvider.java:30)

$ sudo chmod 1777 /tmp
$ java -Djruby.native.verbose=true -jar jruby-complete.jar -rffi -e :ok
Successfully loaded native POSIX impl.
I noticed this when I accidentally changed permissions for /tmp. A more informative message would be helpful. :)o

================== But look at permission of /tmp on pika
craig@pika:/opt/jruby/jruby$ ls -ld /tmp
drwxrwxrwt 3 root root 60 Mar 14 14:17 /tmp

==================
http://ruby-doc.org/core-1.9.3/Process/Status.html

Process::Status

Process::Status encapsulates the information on the status of a running
or terminated system process. The built-in variable $? is either nil or
a Process::Status object.

Posix systems record information on processes using a 16-bit integer. The
lower bits record the process status (stopped, exited, signaled) and
the upper bits possibly contain additional information (for example
the program's return code in the case of exited processes). Pre Ruby
1.8, these bits were exposed directly to the Ruby program. Ruby
now encapsulates these in a Process::Status object. To maximize
compatibility, however, these objects retain a bit-oriented interface. In
the descriptions that follow, when we talk about the integer value of
stat, we're referring to this 16 bit value.

exited? → true or false
Returns true if stat exited normally (for example using an exit() call
or finishing the program).

exitstatus → fixnum or nil
Returns the least significant eight bits of the return code of stat. Only
available if exited? is true.

inspect → string
Override the inspection method.
p $?.inspect #=> "#<Process::Status: pid 12861 exit 1>"

pid → fixnum
Returns the process ID that this status object represents.

signaled? → true or false
Returns true if stat terminated because of an uncaught signal.

stopped? → true or false click to toggle source
Returns true if this process is stopped. This is only returned if the
corresponding wait call had the WUNTRACED flag set.

stopsig → fixnum or nil
Returns the number of the signal that caused stat to stop (or nil if
self is not stopped).

success? → true, false or nil
Returns true if stat is successful, false if not. Returns nil if
exited? is not true.

termsig → fixnum or nil
Returns the number of the signal that caused stat to terminate (or nil
if self was not terminated by an uncaught signal).

==================
https://github.com/jruby/jruby/issues/1561
==================
spoon_socat.rb
  app.start_arduino_io_test


craig@lug:~/dev/pi_arduino_io_1/ruby_tests$ jruby spoon_socat.rb 
AppActor.start_arduino_io_test start SocatManager
AppActor.start_arduino_io_test Request that SocatManager run socat
AppActor.start_arduino_io_test wait for start
SocatManager.run calling SocatSpawnAndWait.run
AppActor.start_arduino_io_test wait for start returned
AppActor.start_arduino_io_test Start ArduinoIo
*** Connecting to Arduino on socket localhost:54321
2014/03/15 22:47:12 socat[14540] E mkstemp("/var/run/Diavolino.lock.KAj13b"): Permission denied
E, [2014-03-15T22:47:12.194000 #14489] ERROR -- : Actor crashed!
EOFError: End of file reached
	org/jruby/RubyIO.java:2856:in `read_nonblock'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-io-39e7dc8e7a34/lib/celluloid/io/stream.rb:41:in `sysread'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-io-39e7dc8e7a34/lib/celluloid/io/stream.rb:386:in `synchronize'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-io-39e7dc8e7a34/lib/celluloid/io/stream.rb:39:in `sysread'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-io-39e7dc8e7a34/lib/celluloid/io/stream.rb:125:in `readpartial'
	spoon_socat.rb:177:in `run'
	org/jruby/RubyKernel.java:1521:in `loop'
	spoon_socat.rb:176:in `run'
	org/jruby/RubyKernel.java:1965:in `public_send'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-f5edcf9c1130/lib/celluloid/calls.rb:26:in `dispatch'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-f5edcf9c1130/lib/celluloid/calls.rb:122:in `dispatch'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-f5edcf9c1130/lib/celluloid/cell.rb:60:in `invoke'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-f5edcf9c1130/lib/celluloid/cell.rb:71:in `task'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-f5edcf9c1130/lib/celluloid/actor.rb:362:in `task'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-f5edcf9c1130/lib/celluloid/tasks.rb:55:in `initialize'
	/opt/ruby/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/celluloid-f5edcf9c1130/lib/celluloid/tasks/task_fiber.rb:15:in `create'
*** Connecting to Arduino on socket localhost:54321
2014/03/15 22:47:12 socat[14541] E mkstemp("/var/run/Diavolino.lock.EYmO5m"): Permission denied
E, [2014-03-15T22:47:12.236000 #14489] ERROR -- : Actor crashed!

==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
==================
